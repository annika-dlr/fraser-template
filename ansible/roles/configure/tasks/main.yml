#!/usr/bin/env pythonNone
# -*- coding: utf-8 -*-
#
# Copyright (c) 2018, German Aerospace Center (DLR)
#
# This file is part of the development version of FRASER.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Authors:
# - 2018, Annika Ofenloch (DLR RY-AVS)

---
  # ---------------------------------------------------------
  # Manage authorized key
  # ---------------------------------------------------------    
- name: Create ssh user
  user: 
    name: "{{ ssh_user }}"
    state: present
    createhome: yes

- name: Add authorized key to remote hosts
  authorized_key:
    user: "{{ ssh_user }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    
  # ---------------------------------------------------------
  # Install ZeroMQ
  # ---------------------------------------------------------
- name: install build-essential package
#  vars: 
#    ansible_python_interpreter: /usr/bin/python
  apt: name=build-essential update_cache=no state=present

- name: Download zeromq version checker
  get_url: url=https://raw.githubusercontent.com/zeromq/pyzmq/master/zmqversion.py dest=/tmp/zmqversion.py

- name: Check that zeromq is not installed
  command: python3.6 /tmp/zmqversion.py
  register: wanted
  changed_when: False

- name: Download ZeroMQ
  get_url: url={{ zeromq_download_url }} dest=/tmp/zeromq.zip
  when: wanted.stdout_lines[1] != zeromq_version

- name: Unarchive ZeroMQ tarball
  unarchive: >
    copy=no
    src=/tmp/zeromq.zip
    dest=/tmp/
  when: wanted.stdout_lines[1] != zeromq_version

- name: Configure ZeroMQ
  command: ./configure --prefix={{ zeromq_prefix }} chdir=/tmp/zeromq-{{ zeromq_version }}
  when: wanted.stdout_lines[1] != zeromq_version

- name: Build ZeroMQ
  command: make chdir=/tmp/zeromq-{{ zeromq_version }}
  when: wanted.stdout_lines[1] != zeromq_version

- name: Install ZeroMQ
  command: make install chdir=/tmp/zeromq-{{ zeromq_version }}
  when: wanted.stdout_lines[1] != zeromq_version

- name: Remove ZeroMQ tarball
  file: path=/tmp/zeromq.zip state=absent
  when: wanted.stdout_lines[1] != zeromq_version

  # ---------------------------------------------------------
  # Install Git
  # ---------------------------------------------------------
- name: Install Git
#  vars: 
#    ansible_python_interpreter: /usr/bin/python
  apt:
    name: git
    state: present
  register: installed_git

  # ---------------------------------------------------------
  # Install C++ binding for 0MQ
  # ---------------------------------------------------------
- name: Checkout cppzmq from Gitlab
  git: repo="https://github.com/zeromq/cppzmq.git"
       dest=/tmp/cppzmq
  when: 
    - installed_git is success  
    
- name: Create Makefile for cppzmq
  command: cmake -G "Unix Makefiles" chdir=/tmp/cppzmq
  
- name: Install cppzmq
  command: make install chdir=/tmp/cppzmq

  # ---------------------------------------------------------
  # Install Flatbuffers
  # ---------------------------------------------------------
- name: Check that flatbuffers is not installed
  command: flatc --version
  register: wanted
  changed_when: False
  
- name: Read-write checkout from Gitlab
  git: repo="https://github.com/google/flatbuffers.git"
       dest=/tmp/flatbuffers
  when:
    - installed_git is success  
    - wanted.stdout_lines[1] is defined

- name: Create Makefile for Flatbuffers
  command: cmake -G "Unix Makefiles" chdir=/tmp/flatbuffers
  when: wanted.stdout_lines[1] is defined
  
- name: Build Flatbuffers
  command: make chdir=/tmp/flatbuffers
  when: wanted.stdout_lines[1] is defined
  
- name: Run Tests of Flatbuffers
  command: ./flattests chdir=/tmp/flatbuffers
  when: wanted.stdout_lines[1] is defined